{"ast":null,"code":"/*!\n * FilePondPluginImageEdit 1.6.3\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.FilePondPluginImageEdit = factory());\n})(this, function () {\n  'use strict';\n\n  var isPreviewableImage = function isPreviewableImage(file) {\n    return /^image/.test(file.type);\n  };\n  /**\n   * Image Edit Proxy Plugin\n   */\n\n\n  var plugin = function plugin(_) {\n    var addFilter = _.addFilter,\n        utils = _.utils,\n        views = _.views;\n    var Type = utils.Type,\n        createRoute = utils.createRoute,\n        _utils$createItemAPI = utils.createItemAPI,\n        createItemAPI = _utils$createItemAPI === void 0 ? function (item) {\n      return item;\n    } : _utils$createItemAPI;\n    var fileActionButton = views.fileActionButton;\n    addFilter('SHOULD_REMOVE_ON_REVERT', function (shouldRemove, _ref) {\n      var item = _ref.item,\n          query = _ref.query;\n      return new Promise(function (resolve) {\n        var file = item.file; // if this file is editable it shouldn't be removed immidiately even when instant uploading\n\n        var canEdit = query('GET_ALLOW_IMAGE_EDIT') && query('GET_IMAGE_EDIT_ALLOW_EDIT') && isPreviewableImage(file); // if the file cannot be edited it should be removed on revert\n\n        resolve(!canEdit);\n      });\n    }); // open editor when loading a new item\n\n    addFilter('DID_LOAD_ITEM', function (item, _ref2) {\n      var query = _ref2.query,\n          dispatch = _ref2.dispatch;\n      return new Promise(function (resolve, reject) {\n        // if is temp or local file\n        if (item.origin > 1) {\n          resolve(item);\n          return;\n        } // get file reference\n\n\n        var file = item.file;\n\n        if (!query('GET_ALLOW_IMAGE_EDIT') || !query('GET_IMAGE_EDIT_INSTANT_EDIT')) {\n          resolve(item);\n          return;\n        } // exit if this is not an image\n\n\n        if (!isPreviewableImage(file)) {\n          resolve(item);\n          return;\n        }\n\n        var createEditorResponseHandler = function createEditorResponseHandler(item, resolve, reject) {\n          return function (userDidConfirm) {\n            // remove item\n            editRequestQueue.shift(); // handle item\n\n            if (userDidConfirm) {\n              resolve(item);\n            } else {\n              reject(item);\n            } // TODO: Fix, should not be needed to kick the internal loop in case no processes are running\n\n\n            dispatch('KICK'); // handle next item!\n\n            requestEdit();\n          };\n        };\n\n        var requestEdit = function requestEdit() {\n          if (!editRequestQueue.length) return;\n          var _editRequestQueue$ = editRequestQueue[0],\n              item = _editRequestQueue$.item,\n              resolve = _editRequestQueue$.resolve,\n              reject = _editRequestQueue$.reject;\n          dispatch('EDIT_ITEM', {\n            id: item.id,\n            handleEditorResponse: createEditorResponseHandler(item, resolve, reject)\n          });\n        };\n\n        queueEditRequest({\n          item: item,\n          resolve: resolve,\n          reject: reject\n        });\n\n        if (editRequestQueue.length === 1) {\n          requestEdit();\n        }\n      });\n    }); // extend item methods\n\n    addFilter('DID_CREATE_ITEM', function (item, _ref3) {\n      var query = _ref3.query,\n          dispatch = _ref3.dispatch;\n      item.extend('edit', function () {\n        dispatch('EDIT_ITEM', {\n          id: item.id\n        });\n      });\n    });\n    var editRequestQueue = [];\n\n    var queueEditRequest = function queueEditRequest(editRequest) {\n      editRequestQueue.push(editRequest);\n      return editRequest;\n    }; // called for each view that is created right after the 'create' method\n\n\n    addFilter('CREATE_VIEW', function (viewAPI) {\n      // get reference to created view\n      var is = viewAPI.is,\n          view = viewAPI.view,\n          query = viewAPI.query;\n      if (!query('GET_ALLOW_IMAGE_EDIT')) return;\n      var canShowImagePreview = query('GET_ALLOW_IMAGE_PREVIEW'); // only run for either the file or the file info panel\n\n      var shouldExtendView = is('file-info') && !canShowImagePreview || is('file') && canShowImagePreview;\n      if (!shouldExtendView) return; // no editor defined, then exit\n\n      var editor = query('GET_IMAGE_EDIT_EDITOR');\n      if (!editor) return; // set default FilePond options and add bridge once\n\n      if (!editor.filepondCallbackBridge) {\n        editor.outputData = true;\n        editor.outputFile = false;\n        editor.filepondCallbackBridge = {\n          onconfirm: editor.onconfirm || function () {},\n          oncancel: editor.oncancel || function () {}\n        };\n      } // opens the editor, if it does not already exist, it creates the editor\n\n\n      var openEditor = function openEditor(_ref4) {\n        var root = _ref4.root,\n            props = _ref4.props,\n            action = _ref4.action;\n        var id = props.id;\n        var handleEditorResponse = action.handleEditorResponse; // update editor props that could have changed\n\n        editor.cropAspectRatio = root.query('GET_IMAGE_CROP_ASPECT_RATIO') || editor.cropAspectRatio;\n        editor.outputCanvasBackgroundColor = root.query('GET_IMAGE_TRANSFORM_CANVAS_BACKGROUND_COLOR') || editor.outputCanvasBackgroundColor; // get item\n\n        var item = root.query('GET_ITEM', id);\n        if (!item) return; // file to open\n\n        var file = item.file; // crop data to pass to editor\n\n        var crop = item.getMetadata('crop');\n        var cropDefault = {\n          center: {\n            x: 0.5,\n            y: 0.5\n          },\n          flip: {\n            horizontal: false,\n            vertical: false\n          },\n          zoom: 1,\n          rotation: 0,\n          aspectRatio: null\n        }; // size data to pass to editor\n\n        var resize = item.getMetadata('resize'); // filter and color data to pass to editor\n\n        var filter = item.getMetadata('filter') || null;\n        var filters = item.getMetadata('filters') || null;\n        var colors = item.getMetadata('colors') || null;\n        var markup = item.getMetadata('markup') || null; // build parameters object\n\n        var imageParameters = {\n          crop: crop || cropDefault,\n          size: resize ? {\n            upscale: resize.upscale,\n            mode: resize.mode,\n            width: resize.size.width,\n            height: resize.size.height\n          } : null,\n          filter: filters ? filters.id || filters.matrix : root.query('GET_ALLOW_IMAGE_FILTER') && root.query('GET_IMAGE_FILTER_COLOR_MATRIX') && !colors ? filter : null,\n          color: colors,\n          markup: markup\n        };\n\n        editor.onconfirm = function (_ref5) {\n          var data = _ref5.data;\n          var crop = data.crop,\n              size = data.size,\n              filter = data.filter,\n              color = data.color,\n              colorMatrix = data.colorMatrix,\n              markup = data.markup; // create new metadata object\n\n          var metadata = {}; // append crop data\n\n          if (crop) {\n            metadata.crop = crop;\n          } // append size data\n\n\n          if (size) {\n            var initialSize = (item.getMetadata('resize') || {}).size;\n            var targetSize = {\n              width: size.width,\n              height: size.height\n            };\n\n            if (!(targetSize.width && targetSize.height) && initialSize) {\n              targetSize.width = initialSize.width;\n              targetSize.height = initialSize.height;\n            }\n\n            if (targetSize.width || targetSize.height) {\n              metadata.resize = {\n                upscale: size.upscale,\n                mode: size.mode,\n                size: targetSize\n              };\n            }\n          }\n\n          if (markup) {\n            metadata.markup = markup;\n          } // set filters and colors so we can restore them when re-editing the image\n\n\n          metadata.colors = color;\n          metadata.filters = filter; // set merged color matrix to use in preview plugin\n\n          metadata.filter = colorMatrix; // update crop metadata\n\n          item.setMetadata(metadata); // call\n\n          editor.filepondCallbackBridge.onconfirm(data, createItemAPI(item)); // used in instant edit mode\n\n          if (!handleEditorResponse) return;\n\n          editor.onclose = function () {\n            handleEditorResponse(true);\n            editor.onclose = null;\n          };\n        };\n\n        editor.oncancel = function () {\n          // call\n          editor.filepondCallbackBridge.oncancel(createItemAPI(item)); // used in instant edit mode\n\n          if (!handleEditorResponse) return;\n\n          editor.onclose = function () {\n            handleEditorResponse(false);\n            editor.onclose = null;\n          };\n        };\n\n        editor.open(file, imageParameters);\n      };\n      /**\n       * Image Preview related\n       */\n      // create the image edit plugin, but only do so if the item is an image\n\n\n      var didLoadItem = function didLoadItem(_ref6) {\n        var root = _ref6.root,\n            props = _ref6.props;\n        if (!query('GET_IMAGE_EDIT_ALLOW_EDIT')) return;\n        var id = props.id; // try to access item\n\n        var item = query('GET_ITEM', id);\n        if (!item) return; // get the file object\n\n        var file = item.file; // exit if this is not an image\n\n        if (!isPreviewableImage(file)) return; // handle interactions\n\n        root.ref.handleEdit = function (e) {\n          e.stopPropagation();\n          root.dispatch('EDIT_ITEM', {\n            id: id\n          });\n        };\n\n        if (canShowImagePreview) {\n          // add edit button to preview\n          var buttonView = view.createChildView(fileActionButton, {\n            label: 'edit',\n            icon: query('GET_IMAGE_EDIT_ICON_EDIT'),\n            opacity: 0\n          }); // edit item classname\n\n          buttonView.element.classList.add('filepond--action-edit-item');\n          buttonView.element.dataset.align = query('GET_STYLE_IMAGE_EDIT_BUTTON_EDIT_ITEM_POSITION');\n          buttonView.on('click', root.ref.handleEdit);\n          root.ref.buttonEditItem = view.appendChildView(buttonView);\n        } else {\n          // view is file info\n          var filenameElement = view.element.querySelector('.filepond--file-info-main');\n          var editButton = document.createElement('button');\n          editButton.className = 'filepond--action-edit-item-alt';\n          editButton.innerHTML = query('GET_IMAGE_EDIT_ICON_EDIT') + '<span>edit</span>';\n          editButton.addEventListener('click', root.ref.handleEdit);\n          filenameElement.appendChild(editButton);\n          root.ref.editButton = editButton;\n        }\n      };\n\n      view.registerDestroyer(function (_ref7) {\n        var root = _ref7.root;\n\n        if (root.ref.buttonEditItem) {\n          root.ref.buttonEditItem.off('click', root.ref.handleEdit);\n        }\n\n        if (root.ref.editButton) {\n          root.ref.editButton.removeEventListener('click', root.ref.handleEdit);\n        }\n      });\n      var routes = {\n        EDIT_ITEM: openEditor,\n        DID_LOAD_ITEM: didLoadItem\n      };\n\n      if (canShowImagePreview) {\n        // view is file\n        var didPreviewUpdate = function didPreviewUpdate(_ref8) {\n          var root = _ref8.root;\n          if (!root.ref.buttonEditItem) return;\n          root.ref.buttonEditItem.opacity = 1;\n        };\n\n        routes.DID_IMAGE_PREVIEW_SHOW = didPreviewUpdate;\n      } else {} // start writing\n\n\n      view.registerWriter(createRoute(routes));\n    }); // Expose plugin options\n\n    return {\n      options: {\n        // enable or disable image editing\n        allowImageEdit: [true, Type.BOOLEAN],\n        // location of processing button\n        styleImageEditButtonEditItemPosition: ['bottom center', Type.STRING],\n        // open editor when image is dropped\n        imageEditInstantEdit: [false, Type.BOOLEAN],\n        // allow editing\n        imageEditAllowEdit: [true, Type.BOOLEAN],\n        // the icon to use for the edit button\n        imageEditIconEdit: ['<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M8.5 17h1.586l7-7L15.5 8.414l-7 7V17zm-1.707-2.707l8-8a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1 0 1.414l-8 8A1 1 0 0 1 10.5 19h-3a1 1 0 0 1-1-1v-3a1 1 0 0 1 .293-.707z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>', Type.STRING],\n        // editor object\n        imageEditEditor: [null, Type.OBJECT]\n      }\n    };\n  }; // fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\n\n\n  var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\n  if (isBrowser) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', {\n      detail: plugin\n    }));\n  }\n\n  return plugin;\n});","map":{"version":3,"sources":["C:/Users/User/Documents/study-buddies/study-buddies/client/node_modules/filepond-plugin-image-edit/dist/filepond-plugin-image-edit.js"],"names":["global","factory","exports","module","define","amd","self","FilePondPluginImageEdit","isPreviewableImage","file","test","type","plugin","_","addFilter","utils","views","Type","createRoute","_utils$createItemAPI","createItemAPI","item","fileActionButton","shouldRemove","_ref","query","Promise","resolve","canEdit","_ref2","dispatch","reject","origin","createEditorResponseHandler","userDidConfirm","editRequestQueue","shift","requestEdit","length","_editRequestQueue$","id","handleEditorResponse","queueEditRequest","_ref3","extend","editRequest","push","viewAPI","is","view","canShowImagePreview","shouldExtendView","editor","filepondCallbackBridge","outputData","outputFile","onconfirm","oncancel","openEditor","_ref4","root","props","action","cropAspectRatio","outputCanvasBackgroundColor","crop","getMetadata","cropDefault","center","x","y","flip","horizontal","vertical","zoom","rotation","aspectRatio","resize","filter","filters","colors","markup","imageParameters","size","upscale","mode","width","height","matrix","color","_ref5","data","colorMatrix","metadata","initialSize","targetSize","setMetadata","onclose","open","didLoadItem","_ref6","ref","handleEdit","e","stopPropagation","buttonView","createChildView","label","icon","opacity","element","classList","add","dataset","align","on","buttonEditItem","appendChildView","filenameElement","querySelector","editButton","document","createElement","className","innerHTML","addEventListener","appendChild","registerDestroyer","_ref7","off","removeEventListener","routes","EDIT_ITEM","DID_LOAD_ITEM","didPreviewUpdate","_ref8","DID_IMAGE_PREVIEW_SHOW","registerWriter","options","allowImageEdit","BOOLEAN","styleImageEditButtonEditItemPosition","STRING","imageEditInstantEdit","imageEditAllowEdit","imageEditIconEdit","imageEditEditor","OBJECT","isBrowser","window","dispatchEvent","CustomEvent","detail"],"mappings":"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","sourcesContent":["/*!\n * FilePondPluginImageEdit 1.6.3\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n\n(function(global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined'\n    ? (module.exports = factory())\n    : typeof define === 'function' && define.amd\n    ? define(factory)\n    : ((global = global || self), (global.FilePondPluginImageEdit = factory()));\n})(this, function() {\n  'use strict';\n\n  var isPreviewableImage = function isPreviewableImage(file) {\n    return /^image/.test(file.type);\n  };\n\n  /**\n   * Image Edit Proxy Plugin\n   */\n  var plugin = function plugin(_) {\n    var addFilter = _.addFilter,\n      utils = _.utils,\n      views = _.views;\n    var Type = utils.Type,\n      createRoute = utils.createRoute,\n      _utils$createItemAPI = utils.createItemAPI,\n      createItemAPI =\n        _utils$createItemAPI === void 0\n          ? function(item) {\n              return item;\n            }\n          : _utils$createItemAPI;\n    var fileActionButton = views.fileActionButton;\n\n    addFilter('SHOULD_REMOVE_ON_REVERT', function(shouldRemove, _ref) {\n      var item = _ref.item,\n        query = _ref.query;\n      return new Promise(function(resolve) {\n        var file = item.file;\n\n        // if this file is editable it shouldn't be removed immidiately even when instant uploading\n        var canEdit =\n          query('GET_ALLOW_IMAGE_EDIT') &&\n          query('GET_IMAGE_EDIT_ALLOW_EDIT') &&\n          isPreviewableImage(file);\n\n        // if the file cannot be edited it should be removed on revert\n        resolve(!canEdit);\n      });\n    });\n\n    // open editor when loading a new item\n    addFilter('DID_LOAD_ITEM', function(item, _ref2) {\n      var query = _ref2.query,\n        dispatch = _ref2.dispatch;\n      return new Promise(function(resolve, reject) {\n        // if is temp or local file\n        if (item.origin > 1) {\n          resolve(item);\n          return;\n        }\n\n        // get file reference\n        var file = item.file;\n        if (\n          !query('GET_ALLOW_IMAGE_EDIT') ||\n          !query('GET_IMAGE_EDIT_INSTANT_EDIT')\n        ) {\n          resolve(item);\n          return;\n        }\n\n        // exit if this is not an image\n        if (!isPreviewableImage(file)) {\n          resolve(item);\n          return;\n        }\n\n        var createEditorResponseHandler = function createEditorResponseHandler(\n          item,\n          resolve,\n          reject\n        ) {\n          return function(userDidConfirm) {\n            // remove item\n            editRequestQueue.shift();\n\n            // handle item\n            if (userDidConfirm) {\n              resolve(item);\n            } else {\n              reject(item);\n            }\n\n            // TODO: Fix, should not be needed to kick the internal loop in case no processes are running\n            dispatch('KICK');\n\n            // handle next item!\n            requestEdit();\n          };\n        };\n\n        var requestEdit = function requestEdit() {\n          if (!editRequestQueue.length) return;\n          var _editRequestQueue$ = editRequestQueue[0],\n            item = _editRequestQueue$.item,\n            resolve = _editRequestQueue$.resolve,\n            reject = _editRequestQueue$.reject;\n\n          dispatch('EDIT_ITEM', {\n            id: item.id,\n            handleEditorResponse: createEditorResponseHandler(\n              item,\n              resolve,\n              reject\n            )\n          });\n        };\n\n        queueEditRequest({ item: item, resolve: resolve, reject: reject });\n\n        if (editRequestQueue.length === 1) {\n          requestEdit();\n        }\n      });\n    });\n\n    // extend item methods\n    addFilter('DID_CREATE_ITEM', function(item, _ref3) {\n      var query = _ref3.query,\n        dispatch = _ref3.dispatch;\n      item.extend('edit', function() {\n        dispatch('EDIT_ITEM', { id: item.id });\n      });\n    });\n\n    var editRequestQueue = [];\n    var queueEditRequest = function queueEditRequest(editRequest) {\n      editRequestQueue.push(editRequest);\n      return editRequest;\n    };\n\n    // called for each view that is created right after the 'create' method\n    addFilter('CREATE_VIEW', function(viewAPI) {\n      // get reference to created view\n      var is = viewAPI.is,\n        view = viewAPI.view,\n        query = viewAPI.query;\n\n      if (!query('GET_ALLOW_IMAGE_EDIT')) return;\n\n      var canShowImagePreview = query('GET_ALLOW_IMAGE_PREVIEW');\n\n      // only run for either the file or the file info panel\n      var shouldExtendView =\n        (is('file-info') && !canShowImagePreview) ||\n        (is('file') && canShowImagePreview);\n\n      if (!shouldExtendView) return;\n\n      // no editor defined, then exit\n      var editor = query('GET_IMAGE_EDIT_EDITOR');\n      if (!editor) return;\n\n      // set default FilePond options and add bridge once\n      if (!editor.filepondCallbackBridge) {\n        editor.outputData = true;\n        editor.outputFile = false;\n        editor.filepondCallbackBridge = {\n          onconfirm: editor.onconfirm || function() {},\n          oncancel: editor.oncancel || function() {}\n        };\n      }\n\n      // opens the editor, if it does not already exist, it creates the editor\n      var openEditor = function openEditor(_ref4) {\n        var root = _ref4.root,\n          props = _ref4.props,\n          action = _ref4.action;\n        var id = props.id;\n        var handleEditorResponse = action.handleEditorResponse;\n\n        // update editor props that could have changed\n        editor.cropAspectRatio =\n          root.query('GET_IMAGE_CROP_ASPECT_RATIO') || editor.cropAspectRatio;\n        editor.outputCanvasBackgroundColor =\n          root.query('GET_IMAGE_TRANSFORM_CANVAS_BACKGROUND_COLOR') ||\n          editor.outputCanvasBackgroundColor;\n\n        // get item\n        var item = root.query('GET_ITEM', id);\n        if (!item) return;\n\n        // file to open\n        var file = item.file;\n\n        // crop data to pass to editor\n        var crop = item.getMetadata('crop');\n        var cropDefault = {\n          center: {\n            x: 0.5,\n            y: 0.5\n          },\n\n          flip: {\n            horizontal: false,\n            vertical: false\n          },\n\n          zoom: 1,\n          rotation: 0,\n          aspectRatio: null\n        };\n\n        // size data to pass to editor\n        var resize = item.getMetadata('resize');\n\n        // filter and color data to pass to editor\n        var filter = item.getMetadata('filter') || null;\n        var filters = item.getMetadata('filters') || null;\n        var colors = item.getMetadata('colors') || null;\n        var markup = item.getMetadata('markup') || null;\n\n        // build parameters object\n        var imageParameters = {\n          crop: crop || cropDefault,\n          size: resize\n            ? {\n                upscale: resize.upscale,\n                mode: resize.mode,\n                width: resize.size.width,\n                height: resize.size.height\n              }\n            : null,\n          filter: filters\n            ? filters.id || filters.matrix\n            : root.query('GET_ALLOW_IMAGE_FILTER') &&\n              root.query('GET_IMAGE_FILTER_COLOR_MATRIX') &&\n              !colors\n            ? filter\n            : null,\n          color: colors,\n          markup: markup\n        };\n\n        editor.onconfirm = function(_ref5) {\n          var data = _ref5.data;\n          var crop = data.crop,\n            size = data.size,\n            filter = data.filter,\n            color = data.color,\n            colorMatrix = data.colorMatrix,\n            markup = data.markup;\n\n          // create new metadata object\n          var metadata = {};\n\n          // append crop data\n          if (crop) {\n            metadata.crop = crop;\n          }\n\n          // append size data\n          if (size) {\n            var initialSize = (item.getMetadata('resize') || {}).size;\n            var targetSize = {\n              width: size.width,\n              height: size.height\n            };\n\n            if (!(targetSize.width && targetSize.height) && initialSize) {\n              targetSize.width = initialSize.width;\n              targetSize.height = initialSize.height;\n            }\n\n            if (targetSize.width || targetSize.height) {\n              metadata.resize = {\n                upscale: size.upscale,\n                mode: size.mode,\n                size: targetSize\n              };\n            }\n          }\n\n          if (markup) {\n            metadata.markup = markup;\n          }\n\n          // set filters and colors so we can restore them when re-editing the image\n          metadata.colors = color;\n          metadata.filters = filter;\n\n          // set merged color matrix to use in preview plugin\n          metadata.filter = colorMatrix;\n\n          // update crop metadata\n          item.setMetadata(metadata);\n\n          // call\n          editor.filepondCallbackBridge.onconfirm(data, createItemAPI(item));\n\n          // used in instant edit mode\n          if (!handleEditorResponse) return;\n          editor.onclose = function() {\n            handleEditorResponse(true);\n            editor.onclose = null;\n          };\n        };\n\n        editor.oncancel = function() {\n          // call\n          editor.filepondCallbackBridge.oncancel(createItemAPI(item));\n\n          // used in instant edit mode\n          if (!handleEditorResponse) return;\n          editor.onclose = function() {\n            handleEditorResponse(false);\n            editor.onclose = null;\n          };\n        };\n\n        editor.open(file, imageParameters);\n      };\n\n      /**\n       * Image Preview related\n       */\n\n      // create the image edit plugin, but only do so if the item is an image\n      var didLoadItem = function didLoadItem(_ref6) {\n        var root = _ref6.root,\n          props = _ref6.props;\n\n        if (!query('GET_IMAGE_EDIT_ALLOW_EDIT')) return;\n        var id = props.id;\n\n        // try to access item\n        var item = query('GET_ITEM', id);\n        if (!item) return;\n\n        // get the file object\n        var file = item.file;\n\n        // exit if this is not an image\n        if (!isPreviewableImage(file)) return;\n\n        // handle interactions\n        root.ref.handleEdit = function(e) {\n          e.stopPropagation();\n          root.dispatch('EDIT_ITEM', { id: id });\n        };\n\n        if (canShowImagePreview) {\n          // add edit button to preview\n          var buttonView = view.createChildView(fileActionButton, {\n            label: 'edit',\n            icon: query('GET_IMAGE_EDIT_ICON_EDIT'),\n            opacity: 0\n          });\n\n          // edit item classname\n          buttonView.element.classList.add('filepond--action-edit-item');\n          buttonView.element.dataset.align = query(\n            'GET_STYLE_IMAGE_EDIT_BUTTON_EDIT_ITEM_POSITION'\n          );\n          buttonView.on('click', root.ref.handleEdit);\n\n          root.ref.buttonEditItem = view.appendChildView(buttonView);\n        } else {\n          // view is file info\n          var filenameElement = view.element.querySelector(\n            '.filepond--file-info-main'\n          );\n          var editButton = document.createElement('button');\n          editButton.className = 'filepond--action-edit-item-alt';\n          editButton.innerHTML =\n            query('GET_IMAGE_EDIT_ICON_EDIT') + '<span>edit</span>';\n          editButton.addEventListener('click', root.ref.handleEdit);\n          filenameElement.appendChild(editButton);\n\n          root.ref.editButton = editButton;\n        }\n      };\n\n      view.registerDestroyer(function(_ref7) {\n        var root = _ref7.root;\n        if (root.ref.buttonEditItem) {\n          root.ref.buttonEditItem.off('click', root.ref.handleEdit);\n        }\n        if (root.ref.editButton) {\n          root.ref.editButton.removeEventListener('click', root.ref.handleEdit);\n        }\n      });\n\n      var routes = {\n        EDIT_ITEM: openEditor,\n        DID_LOAD_ITEM: didLoadItem\n      };\n\n      if (canShowImagePreview) {\n        // view is file\n        var didPreviewUpdate = function didPreviewUpdate(_ref8) {\n          var root = _ref8.root;\n          if (!root.ref.buttonEditItem) return;\n          root.ref.buttonEditItem.opacity = 1;\n        };\n\n        routes.DID_IMAGE_PREVIEW_SHOW = didPreviewUpdate;\n      } else {\n      }\n\n      // start writing\n      view.registerWriter(createRoute(routes));\n    });\n\n    // Expose plugin options\n    return {\n      options: {\n        // enable or disable image editing\n        allowImageEdit: [true, Type.BOOLEAN],\n\n        // location of processing button\n        styleImageEditButtonEditItemPosition: ['bottom center', Type.STRING],\n\n        // open editor when image is dropped\n        imageEditInstantEdit: [false, Type.BOOLEAN],\n\n        // allow editing\n        imageEditAllowEdit: [true, Type.BOOLEAN],\n\n        // the icon to use for the edit button\n        imageEditIconEdit: [\n          '<svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M8.5 17h1.586l7-7L15.5 8.414l-7 7V17zm-1.707-2.707l8-8a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1 0 1.414l-8 8A1 1 0 0 1 10.5 19h-3a1 1 0 0 1-1-1v-3a1 1 0 0 1 .293-.707z\" fill=\"currentColor\" fill-rule=\"nonzero\"/></svg>',\n          Type.STRING\n        ],\n\n        // editor object\n        imageEditEditor: [null, Type.OBJECT]\n      }\n    };\n  };\n\n  // fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\n  var isBrowser =\n    typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  if (isBrowser) {\n    document.dispatchEvent(\n      new CustomEvent('FilePond:pluginloaded', { detail: plugin })\n    );\n  }\n\n  return plugin;\n});\n"]},"metadata":{},"sourceType":"script"}