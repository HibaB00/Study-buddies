{"ast":null,"code":"/*!\n * FilePondPluginImageCrop 2.0.6\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.FilePondPluginImageCrop = factory());\n})(this, function () {\n  'use strict';\n\n  var isImage = function isImage(file) {\n    return /^image/.test(file.type);\n  };\n  /**\n   * Image Auto Crop Plugin\n   */\n\n\n  var plugin = function plugin(_ref) {\n    var addFilter = _ref.addFilter,\n        utils = _ref.utils;\n    var Type = utils.Type,\n        isFile = utils.isFile,\n        getNumericAspectRatioFromString = utils.getNumericAspectRatioFromString; // tests if crop is allowed on this item\n\n    var allowCrop = function allowCrop(item, query) {\n      return !(!isImage(item.file) || !query('GET_ALLOW_IMAGE_CROP'));\n    };\n\n    var isObject = function isObject(value) {\n      return typeof value === 'object';\n    };\n\n    var isNumber = function isNumber(value) {\n      return typeof value === 'number';\n    };\n\n    var updateCrop = function updateCrop(item, obj) {\n      return item.setMetadata('crop', Object.assign({}, item.getMetadata('crop'), obj));\n    }; // extend item methods\n\n\n    addFilter('DID_CREATE_ITEM', function (item, _ref2) {\n      var query = _ref2.query;\n      item.extend('setImageCrop', function (crop) {\n        if (!allowCrop(item, query) || !isObject(center)) return;\n        item.setMetadata('crop', crop);\n        return crop;\n      });\n      item.extend('setImageCropCenter', function (center) {\n        if (!allowCrop(item, query) || !isObject(center)) return;\n        return updateCrop(item, {\n          center: center\n        });\n      });\n      item.extend('setImageCropZoom', function (zoom) {\n        if (!allowCrop(item, query) || !isNumber(zoom)) return;\n        return updateCrop(item, {\n          zoom: Math.max(1, zoom)\n        });\n      });\n      item.extend('setImageCropRotation', function (rotation) {\n        if (!allowCrop(item, query) || !isNumber(rotation)) return;\n        return updateCrop(item, {\n          rotation: rotation\n        });\n      });\n      item.extend('setImageCropFlip', function (flip) {\n        if (!allowCrop(item, query) || !isObject(flip)) return;\n        return updateCrop(item, {\n          flip: flip\n        });\n      });\n      item.extend('setImageCropAspectRatio', function (newAspectRatio) {\n        if (!allowCrop(item, query) || typeof newAspectRatio === 'undefined') return;\n        var currentCrop = item.getMetadata('crop');\n        var aspectRatio = getNumericAspectRatioFromString(newAspectRatio);\n        var newCrop = {\n          center: {\n            x: 0.5,\n            y: 0.5\n          },\n          flip: currentCrop ? Object.assign({}, currentCrop.flip) : {\n            horizontal: false,\n            vertical: false\n          },\n          rotation: 0,\n          zoom: 1,\n          aspectRatio: aspectRatio\n        };\n        item.setMetadata('crop', newCrop);\n        return newCrop;\n      });\n    }); // subscribe to file transformations\n\n    addFilter('DID_LOAD_ITEM', function (item, _ref3) {\n      var query = _ref3.query;\n      return new Promise(function (resolve, reject) {\n        // get file reference\n        var file = item.file; // if this is not an image we do not have any business cropping it and we'll continue with the unaltered dataset\n\n        if (!isFile(file) || !isImage(file) || !query('GET_ALLOW_IMAGE_CROP')) {\n          return resolve(item);\n        } // already has crop metadata set?\n\n\n        var crop = item.getMetadata('crop');\n\n        if (crop) {\n          return resolve(item);\n        } // get the required aspect ratio and exit if it's not set\n\n\n        var humanAspectRatio = query('GET_IMAGE_CROP_ASPECT_RATIO'); // set default crop rectangle\n\n        item.setMetadata('crop', {\n          center: {\n            x: 0.5,\n            y: 0.5\n          },\n          flip: {\n            horizontal: false,\n            vertical: false\n          },\n          rotation: 0,\n          zoom: 1,\n          aspectRatio: humanAspectRatio ? getNumericAspectRatioFromString(humanAspectRatio) : null\n        }); // we done!\n\n        resolve(item);\n      });\n    }); // Expose plugin options\n\n    return {\n      options: {\n        // enable or disable image cropping\n        allowImageCrop: [true, Type.BOOLEAN],\n        // the aspect ratio of the crop ('1:1', '16:9', etc)\n        imageCropAspectRatio: [null, Type.STRING]\n      }\n    };\n  }; // fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\n\n\n  var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\n  if (isBrowser) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', {\n      detail: plugin\n    }));\n  }\n\n  return plugin;\n});","map":{"version":3,"sources":["C:/Users/User/Documents/study-buddies/study-buddies/client/node_modules/filepond-plugin-image-crop/dist/filepond-plugin-image-crop.js"],"names":["global","factory","exports","module","define","amd","self","FilePondPluginImageCrop","isImage","file","test","type","plugin","_ref","addFilter","utils","Type","isFile","getNumericAspectRatioFromString","allowCrop","item","query","isObject","value","isNumber","updateCrop","obj","setMetadata","Object","assign","getMetadata","_ref2","extend","crop","center","zoom","Math","max","rotation","flip","newAspectRatio","currentCrop","aspectRatio","newCrop","x","y","horizontal","vertical","_ref3","Promise","resolve","reject","humanAspectRatio","options","allowImageCrop","BOOLEAN","imageCropAspectRatio","STRING","isBrowser","window","document","dispatchEvent","CustomEvent","detail"],"mappings":"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","sourcesContent":["/*!\n * FilePondPluginImageCrop 2.0.6\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit https://pqina.nl/filepond/ for details.\n */\n\n/* eslint-disable */\n\n(function(global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined'\n    ? (module.exports = factory())\n    : typeof define === 'function' && define.amd\n    ? define(factory)\n    : ((global = global || self), (global.FilePondPluginImageCrop = factory()));\n})(this, function() {\n  'use strict';\n\n  var isImage = function isImage(file) {\n    return /^image/.test(file.type);\n  };\n\n  /**\n   * Image Auto Crop Plugin\n   */\n  var plugin = function plugin(_ref) {\n    var addFilter = _ref.addFilter,\n      utils = _ref.utils;\n    var Type = utils.Type,\n      isFile = utils.isFile,\n      getNumericAspectRatioFromString = utils.getNumericAspectRatioFromString;\n\n    // tests if crop is allowed on this item\n    var allowCrop = function allowCrop(item, query) {\n      return !(!isImage(item.file) || !query('GET_ALLOW_IMAGE_CROP'));\n    };\n\n    var isObject = function isObject(value) {\n      return typeof value === 'object';\n    };\n\n    var isNumber = function isNumber(value) {\n      return typeof value === 'number';\n    };\n\n    var updateCrop = function updateCrop(item, obj) {\n      return item.setMetadata(\n        'crop',\n        Object.assign({}, item.getMetadata('crop'), obj)\n      );\n    };\n\n    // extend item methods\n    addFilter('DID_CREATE_ITEM', function(item, _ref2) {\n      var query = _ref2.query;\n\n      item.extend('setImageCrop', function(crop) {\n        if (!allowCrop(item, query) || !isObject(center)) return;\n        item.setMetadata('crop', crop);\n        return crop;\n      });\n\n      item.extend('setImageCropCenter', function(center) {\n        if (!allowCrop(item, query) || !isObject(center)) return;\n        return updateCrop(item, { center: center });\n      });\n\n      item.extend('setImageCropZoom', function(zoom) {\n        if (!allowCrop(item, query) || !isNumber(zoom)) return;\n        return updateCrop(item, { zoom: Math.max(1, zoom) });\n      });\n\n      item.extend('setImageCropRotation', function(rotation) {\n        if (!allowCrop(item, query) || !isNumber(rotation)) return;\n        return updateCrop(item, { rotation: rotation });\n      });\n\n      item.extend('setImageCropFlip', function(flip) {\n        if (!allowCrop(item, query) || !isObject(flip)) return;\n        return updateCrop(item, { flip: flip });\n      });\n\n      item.extend('setImageCropAspectRatio', function(newAspectRatio) {\n        if (!allowCrop(item, query) || typeof newAspectRatio === 'undefined')\n          return;\n\n        var currentCrop = item.getMetadata('crop');\n\n        var aspectRatio = getNumericAspectRatioFromString(newAspectRatio);\n\n        var newCrop = {\n          center: {\n            x: 0.5,\n            y: 0.5\n          },\n\n          flip: currentCrop\n            ? Object.assign({}, currentCrop.flip)\n            : {\n                horizontal: false,\n                vertical: false\n              },\n\n          rotation: 0,\n          zoom: 1,\n          aspectRatio: aspectRatio\n        };\n\n        item.setMetadata('crop', newCrop);\n\n        return newCrop;\n      });\n    });\n\n    // subscribe to file transformations\n    addFilter('DID_LOAD_ITEM', function(item, _ref3) {\n      var query = _ref3.query;\n      return new Promise(function(resolve, reject) {\n        // get file reference\n        var file = item.file;\n\n        // if this is not an image we do not have any business cropping it and we'll continue with the unaltered dataset\n        if (!isFile(file) || !isImage(file) || !query('GET_ALLOW_IMAGE_CROP')) {\n          return resolve(item);\n        }\n\n        // already has crop metadata set?\n        var crop = item.getMetadata('crop');\n        if (crop) {\n          return resolve(item);\n        }\n\n        // get the required aspect ratio and exit if it's not set\n        var humanAspectRatio = query('GET_IMAGE_CROP_ASPECT_RATIO');\n\n        // set default crop rectangle\n        item.setMetadata('crop', {\n          center: {\n            x: 0.5,\n            y: 0.5\n          },\n\n          flip: {\n            horizontal: false,\n            vertical: false\n          },\n\n          rotation: 0,\n          zoom: 1,\n          aspectRatio: humanAspectRatio\n            ? getNumericAspectRatioFromString(humanAspectRatio)\n            : null\n        });\n\n        // we done!\n        resolve(item);\n      });\n    });\n\n    // Expose plugin options\n    return {\n      options: {\n        // enable or disable image cropping\n        allowImageCrop: [true, Type.BOOLEAN],\n\n        // the aspect ratio of the crop ('1:1', '16:9', etc)\n        imageCropAspectRatio: [null, Type.STRING]\n      }\n    };\n  };\n\n  // fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\n  var isBrowser =\n    typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  if (isBrowser) {\n    document.dispatchEvent(\n      new CustomEvent('FilePond:pluginloaded', { detail: plugin })\n    );\n  }\n\n  return plugin;\n});\n"]},"metadata":{},"sourceType":"script"}