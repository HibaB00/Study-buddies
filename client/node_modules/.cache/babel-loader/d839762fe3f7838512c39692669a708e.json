{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\study-buddies\\\\study-buddies\\\\client\\\\src\\\\components\\\\Popup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Popup.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport FileBase from 'react-file-base64';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Popup(props) {\n  _s();\n\n  const [roomData, setRoomData] = useState({\n    title: '',\n    selectedFile: '',\n    admin: '',\n    type: ''\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    console.log(roomData);\n    const body = {\n      roomData\n    };\n\n    try {\n      let res = await fetch('http://localhost:5000/posts/registerRoom', {\n        method: 'POST',\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Credentials\": true,\n          \"mode\": \"cors\"\n        },\n        body: body\n      });\n    } catch (err) {}\n  }\n\n  return props.trigger ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-btn\",\n        onClick: () => props.setTrigger(false),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 87\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: roomData.selectedFile,\n            className: \"img-room-chosen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(FileBase, {\n            type: \"file\",\n            multiple: false,\n            onDone: _ref => {\n              let {\n                base64\n              } = _ref;\n              return setRoomData({ ...roomData,\n                selectedFile: base64\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"room name\",\n          className: \"room-name\",\n          onChange: e => setRoomData({ ...roomData,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 145\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          className: \"pick-room-type\",\n          id: \"private\",\n          name: \"check\",\n          value: \"private\",\n          onChange: e => setRoomData({ ...roomData,\n            type: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"private\",\n          children: \"private\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 57\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          className: \"pick-room-type\",\n          id: \"public\",\n          name: \"check\",\n          value: \"public\",\n          onChange: e => setRoomData({ ...roomData,\n            type: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"public\",\n          children: \"public\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"create-btn\",\n          children: \"Create Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this) : \"\";\n}\n\n_s(Popup, \"pPXoL/gFbSvnrjoZWbqEwhJhUOM=\");\n\n_c = Popup;\nexport default Popup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"sources":["C:/Users/User/Documents/study-buddies/study-buddies/client/src/components/Popup.js"],"names":["React","useState","FontAwesomeIcon","faArrowRight","FileBase","Popup","props","roomData","setRoomData","title","selectedFile","admin","type","handleSubmit","e","preventDefault","console","log","body","res","fetch","method","headers","err","trigger","setTrigger","base64","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAElB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAE;AACtCQ,IAAAA,KAAK,EAAE,EAD+B;AAEtCC,IAAAA,YAAY,EAAE,EAFwB;AAGtCC,IAAAA,KAAK,EAAE,EAH+B;AAItCC,IAAAA,IAAI,EAAE;AAJgC,GAAF,CAAxC;;AAOA,iBAAeC,YAAf,CAA4BC,CAA5B,EAA8B;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACA,UAAMW,IAAI,GAAE;AACRX,MAAAA;AADQ,KAAZ;;AAIA,QAAG;AACC,UAAIY,GAAG,GAAG,MAAMC,KAAK,CAAC,0CAAD,EAA6C;AAClEC,QAAAA,MAAM,EAAE,MAD0D;AAElEC,QAAAA,OAAO,EAAE;AACP,yCAAgC,GADzB;AAEP,8CAAqC,IAF9B;AAGP,kBAAQ;AAHD,SAFyD;AAOlEJ,QAAAA,IAAI,EAAEA;AAP4D,OAA7C,CAArB;AAUH,KAXD,CAWC,OAAMK,GAAN,EAAU,CAEV;AACJ;;AAED,SAAQjB,KAAK,CAACkB,OAAP,gBACH;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,MAAMlB,KAAK,CAACmB,UAAN,CAAiB,KAAjB,CAA7C;AAAA,+BAAsE,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAGtB;AAAxB;AAAA;AAAA;AAAA;AAAA;AAAtE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,YAAY,EAAC,KAAnB;AAAyB,QAAA,UAAU,MAAnC;AAAoC,QAAA,QAAQ,EAAEU,YAA9C;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACI;AAAK,YAAA,GAAG,EAAEN,QAAQ,CAACG,YAAnB;AAAiC,YAAA,SAAS,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,iCACI,QAAC,QAAD;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,QAAQ,EAAE,KAFd;AAGI,YAAA,MAAM,EAAE;AAAA,kBAAC;AAACgB,gBAAAA;AAAD,eAAD;AAAA,qBAAclB,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeG,gBAAAA,YAAY,EAAEgB;AAA7B,eAAD,CAAzB;AAAA;AAHZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAWI;AAAO,UAAA,WAAW,EAAC,WAAnB;AAA+B,UAAA,SAAS,EAAC,WAAzC;AAAqD,UAAA,QAAQ,EAAGZ,CAAD,IAAON,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,YAAAA,KAAK,EAAEK,CAAC,CAACa,MAAF,CAASC;AAA/B,WAAD;AAAjF;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAWgI;AAAA;AAAA;AAAA;AAAA,gBAXhI,eAYI;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAC,gBAA9B;AAA+C,UAAA,EAAE,EAAC,SAAlD;AAA4D,UAAA,IAAI,EAAC,OAAjE;AAAyE,UAAA,KAAK,EAAC,SAA/E;AAAyF,UAAA,QAAQ,EAAGd,CAAD,IAAON,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeK,YAAAA,IAAI,EAAEE,CAAC,CAACa,MAAF,CAASC;AAA9B,WAAD;AAArH;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAaI;AAAO,UAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAawC;AAAA;AAAA;AAAA;AAAA,gBAbxC,eAcI;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAC,gBAA9B;AAA+C,UAAA,EAAE,EAAC,QAAlD;AAA2D,UAAA,IAAI,EAAC,OAAhE;AAAwE,UAAA,KAAK,EAAC,QAA9E;AAAuF,UAAA,QAAQ,EAAGd,CAAD,IAAON,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeK,YAAAA,IAAI,EAAEE,CAAC,CAACa,MAAF,CAASC;AAA9B,WAAD;AAAnH;AAAA;AAAA;AAAA;AAAA,gBAdJ,eAeI;AAAO,UAAA,GAAG,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAesC;AAAA;AAAA;AAAA;AAAA,gBAftC,eAgBI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,EAAE,EAAC,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADG,GAwBH,EAxBJ;AAyBH;;GAzDQvB,K;;KAAAA,K;AA2DT,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport './Popup.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons'\r\nimport FileBase from 'react-file-base64'\r\n\r\nfunction Popup(props) {\r\n\r\n    const [roomData, setRoomData] = useState ({\r\n        title: '',\r\n        selectedFile: '',\r\n        admin: '',\r\n        type: ''\r\n    })\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n        console.log(roomData)\r\n        const body ={\r\n            roomData\r\n        }\r\n        \r\n        try{\r\n            let res = await fetch('http://localhost:5000/posts/registerRoom', {\r\n            method: 'POST',\r\n            headers: {\r\n              \"Access-Control-Allow-Origin\" : \"*\", \r\n              \"Access-Control-Allow-Credentials\" : true,\r\n              \"mode\": \"cors\"\r\n            },\r\n            body: body\r\n          });\r\n            \r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n\r\n    return (props.trigger) ? (\r\n        <div className=\"popup\">\r\n            <div className=\"popup-inner\">\r\n                <button className=\"close-btn\" onClick={() => props.setTrigger(false)}><FontAwesomeIcon icon={ faArrowRight} /></button>\r\n                <form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n                    <div className=\"room-img\">\r\n                        <img src={roomData.selectedFile} className='img-room-chosen'/>\r\n                    </div>\r\n                    <div>\r\n                        <FileBase\r\n                            type=\"file\"\r\n                            multiple={false}\r\n                            onDone={({base64}) => setRoomData({ ...roomData, selectedFile: base64})}\r\n                        />\r\n                    </div>\r\n                    <input placeholder=\"room name\" className=\"room-name\" onChange={(e) => setRoomData({ ...roomData, title: e.target.value })}/><br></br>\r\n                    <input type=\"radio\" className=\"pick-room-type\" id=\"private\" name=\"check\" value=\"private\" onChange={(e) => setRoomData({ ...roomData, type: e.target.value })}/>\r\n                    <label for=\"private\">private</label><br></br>\r\n                    <input type=\"radio\" className=\"pick-room-type\" id=\"public\" name=\"check\" value=\"public\" onChange={(e) => setRoomData({ ...roomData, type: e.target.value })} />\r\n                    <label for=\"public\">public</label><br></br>\r\n                    <button type=\"submit\" id=\"create-btn\">Create Room</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    ) : \"\";\r\n}\r\n\r\nexport default Popup\r\n"]},"metadata":{},"sourceType":"module"}