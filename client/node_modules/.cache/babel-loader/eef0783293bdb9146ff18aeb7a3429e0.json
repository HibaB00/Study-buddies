{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\study-buddies\\\\study-buddies\\\\client\\\\src\\\\pages\\\\Rooms.js\",\n    _s = $RefreshSig$();\n\nimport './Rooms.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle, faUserPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport Popup from '../components/Popup';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { BeatLoader } from 'react-spinners';\nimport Loading from '../components/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Rooms() {\n  _s();\n\n  const [toggleState, setToggleState] = useState(1);\n  const history = useHistory();\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [user, setUser] = useState({\n    username: ''\n  });\n\n  const toggleTab = index => {\n    setToggleState(index);\n  };\n\n  const [rooms, setRooms] = useState([]);\n  const [publicRooms, setPublicRooms] = useState([]);\n  useEffect(() => {\n    async function getRooms() {\n      const newUsername = { ...user,\n        username: localStorage.getItem('username')\n      };\n      setUser(newUsername);\n      const body = newUsername;\n\n      try {\n        let res = await fetch('http://localhost:5000/posts/getRooms', {\n          method: 'POST',\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Credentials\": true,\n            \"mode\": \"cors\",\n            \"Content-type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        });\n        let data = await res.json();\n        const newRooms = data;\n        setRooms(newRooms);\n      } catch (error) {\n        console.log({\n          error: error.message\n        });\n      }\n    }\n\n    getRooms();\n  }, []);\n  useEffect(() => {\n    async function getPublicRooms() {\n      try {\n        let res = await fetch('http://localhost:5000/posts/getPublicRooms', {\n          method: 'GET'\n        });\n        let data = await res.json();\n        const newRooms = data;\n        setPublicRooms(newRooms);\n      } catch (err) {}\n    }\n\n    getPublicRooms();\n  });\n\n  function goToRoom(roomId) {\n    history.push(\"/\" + roomId);\n  }\n\n  function deleteRoom() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rooms-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-navbar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rooms-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: toggleState === 1 ? \"active-room\" : \"rooms\",\n          id: \"private\",\n          onClick: () => toggleTab(1),\n          children: \"Your Rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: toggleState === 2 ? \"active-room\" : \"rooms\",\n          id: \"public\",\n          onClick: () => toggleTab(2),\n          children: \"Public Rooms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), toggleState === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-room\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-room-btn\",\n          onClick: () => setButtonPopup(true),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlusCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 90\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), rooms.length !== 0 ? rooms.rooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"your-rooms\",\n        onClick: () => goToRoom(room._id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: room.roomImageType,\n          className: \"roomImg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"roomName\",\n          target: \"room\",\n          children: room.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-btn\",\n          name: \"room\",\n          onClick: deleteRoom(room._id),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrashAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 95\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Popup, {\n        trigger: buttonPopup,\n        setTrigger: setButtonPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-list\",\n      children: publicRooms.length !== 0 ? publicRooms.publicRooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"your-rooms\",\n        onClick: () => goToRoom(room._id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: room.roomImageType,\n          className: \"roomImg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"roomName\",\n          children: room.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Rooms, \"PGFcEmRcsv3KWk1FhLKJveIMo+U=\", false, function () {\n  return [useHistory];\n});\n\n_c = Rooms;\nexport default Rooms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rooms\");","map":{"version":3,"sources":["C:/Users/User/Documents/study-buddies/study-buddies/client/src/pages/Rooms.js"],"names":["FontAwesomeIcon","faPlusCircle","faUserPlus","faTrashAlt","Popup","useState","useEffect","useHistory","BeatLoader","Loading","Rooms","toggleState","setToggleState","history","buttonPopup","setButtonPopup","user","setUser","username","toggleTab","index","rooms","setRooms","publicRooms","setPublicRooms","getRooms","newUsername","localStorage","getItem","body","res","fetch","method","headers","JSON","stringify","data","json","newRooms","error","console","log","message","getPublicRooms","err","goToRoom","roomId","push","deleteRoom","length","map","room","_id","roomImageType","title"],"mappings":"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","sourcesContent":["import './Rooms.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle, faUserPlus, faTrashAlt} from '@fortawesome/free-solid-svg-icons'\r\nimport Popup from '../components/Popup';\r\nimport {useState, useEffect} from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport {BeatLoader} from 'react-spinners'\r\nimport Loading from '../components/Loading'\r\n\r\n\r\nfunction Rooms() {\r\n  \r\n    const [toggleState, setToggleState] = useState(1);\r\n    const history = useHistory()\r\n\r\n  const [buttonPopup, setButtonPopup] = useState(false);\r\n  const [user, setUser] = useState({\r\n      username: ''\r\n  });\r\n\r\n  const toggleTab = (index) =>{\r\n      setToggleState(index)\r\n  }\r\n\r\n  const [rooms, setRooms] = useState([])\r\n  const [publicRooms, setPublicRooms] = useState([])\r\n\r\n  useEffect(() => {\r\n    async function getRooms()\r\n    {\r\n        const newUsername = {...user, username: localStorage.getItem('username')}\r\n        setUser(newUsername);\r\n        const body = newUsername;\r\n        try{\r\n            let res = await fetch('http://localhost:5000/posts/getRooms', {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Access-Control-Allow-Origin\" : \"*\", \r\n                \"Access-Control-Allow-Credentials\" : true,\r\n                \"mode\": \"cors\",\r\n                \"Content-type\": \"application/json\"\r\n                },\r\n                body:JSON.stringify(body)\r\n            });\r\n            let data = await res.json();\r\n            const newRooms = data;\r\n            setRooms(newRooms)\r\n        }catch(error){\r\n            console.log({error: error.message})\r\n        }\r\n    }\r\n    getRooms();\r\n}, []);\r\n\r\n    useEffect (() =>{\r\n        async function getPublicRooms(){\r\n            try{\r\n                let res = await fetch ('http://localhost:5000/posts/getPublicRooms',{\r\n                    method: 'GET'\r\n                })\r\n                let data = await res.json();\r\n                const newRooms = data;\r\n                setPublicRooms(newRooms)\r\n\r\n            }catch(err){\r\n\r\n            }\r\n        }\r\n        getPublicRooms()\r\n    })\r\n\r\n\r\nfunction goToRoom(roomId){\r\n    history.push(\"/\"+roomId)\r\n}\r\nfunction deleteRoom(){\r\n\r\n}\r\n\r\n  return (\r\n    <div className=\"rooms-container\">\r\n        <div className=\"rooms-navbar\">\r\n            <div className=\"rooms-list\">\r\n                <div className= {toggleState === 1 ? \"active-room\": \"rooms\"} id='private' onClick={() => toggleTab(1)}>Your Rooms</div>\r\n                <div className={toggleState === 2 ? \"active-room\": \"rooms\"} id='public' onClick={() => toggleTab(2)}>Public Rooms</div>\r\n            </div>\r\n        </div>\r\n        {toggleState === 1 ? \r\n        <div className=\"rooms-list\">\r\n            <div className=\"create-room\">\r\n                <button className=\"create-room-btn\" onClick={() => setButtonPopup(true)}><FontAwesomeIcon icon={faPlusCircle} /></button>\r\n            </div>\r\n            { rooms.length !== 0 ? rooms.rooms.map((room) => \r\n                <div className=\"your-rooms\" onClick={() => goToRoom(room._id)}>\r\n                    <img src={room.roomImageType} className=\"roomImg\"/>\r\n                    <p className=\"roomName\" target=\"room\">{room.title}</p>\r\n                    <button className=\"delete-btn\" name=\"room\" onClick={deleteRoom(room._id)}><FontAwesomeIcon icon={faTrashAlt}/></button>\r\n                </div>\r\n            ): <Loading/>}\r\n            <Popup trigger={buttonPopup} setTrigger={setButtonPopup} />\r\n        </div> \r\n        : <div className=\"rooms-list\">\r\n            { publicRooms.length !== 0 ? publicRooms.publicRooms.map((room) => \r\n                <div className=\"your-rooms\" onClick={() => goToRoom(room._id)}>\r\n                    <img src={room.roomImageType} className=\"roomImg\"/>\r\n                    <p className=\"roomName\">{room.title}</p>\r\n                </div>\r\n            ): <Loading/>}\r\n        </div> }\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Rooms;"]},"metadata":{},"sourceType":"module"}